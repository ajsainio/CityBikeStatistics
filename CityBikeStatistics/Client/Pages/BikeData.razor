@page "/bikedata"
@using CityBikeStatistics.Shared
@inject HttpClient Http

<h1>Bike data</h1>

<div class="form-group">
  <p><em>Set time range for departures</em></p>
  <label for="StartDate">Start date: </label><input id="StartDate" type="date" @bind="_startDate" />
  <label for="EndDate">End date: </label><input id="EndDate" type="date" @bind="_endDate" />
  <button class="btn btn-primary" @onclick="GetBikeDataOverview">Search</button>
</div>

@if (_cityBikeStations == null) {
  <p><em>Loading...</em></p>
} else {
  <div class="form-group">
    <input class="form-control" type="text" placeholder="Search with station name..." @bind="_filter" @bind:event="oninput" />
  </div>
  <div class="row">
    <div class="col-4">
      <table class="table">
        <thead>
          <tr>
            <th>Station name</th>
            <th>Departures</th>
            <th>Returns</th>
            <th>Details</th>
          </tr>
        </thead>
        <tbody>
          @foreach (var station in _cityBikeStations) {
            if (IsVisible(station.StationName)) {
              <tr class="@(station.StationId == _selectedStation ? "table-active" : "")">
                <td>@station.StationName</td>
                <td>@station.Departures</td>
                <td>@station.Returns</td>
                <td><button class="btn btn-sm btn-dark" @onclick="() => GetStationData(station.StationId)">Show</button></td>
              </tr>
            }
          }
        </tbody>
      </table>
    </div>
    <div class="col-8">
      <StationData CityBikeStationData="_cityBikeData"></StationData>
    </div>
  </div>
}

@code {
  private CityBikeDataContract[] _cityBikeData = new CityBikeDataContract[0];
  private CityBikeStationOverview[] _cityBikeStations = new CityBikeStationOverview[0];
  private int _selectedStation;

  private string _filter;

  private DateTime _startDate = DateTime.Today.AddDays(-1);
  private DateTime _endDate = DateTime.Today;
  private string _selectedStartDate;
  private string _selectedEndDate;
  
  private async Task GetBikeDataOverview() {
    _cityBikeStations = null;
    _cityBikeData = new CityBikeDataContract[0];
    _selectedStartDate = _startDate.ToString("MM-dd-yyyy");
    _selectedEndDate = _endDate.AddDays(1).ToString("MM-dd-yyyy");
    _cityBikeStations = await Http.GetFromJsonAsync<CityBikeStationOverview[]>($"CityBikeData/Overview/{_selectedStartDate}/{_selectedEndDate}");
  }

  private async Task GetStationData(int station) {
    _cityBikeData = new CityBikeDataContract[0];
    _selectedStation = station;
    _cityBikeData = await Http.GetFromJsonAsync<CityBikeDataContract[]>($"CityBikeData/DataByStation/{station}/{_selectedStartDate}/{_selectedEndDate}");
  }

  private bool IsVisible(string station) {
    return string.IsNullOrWhiteSpace(_filter) || station.Contains(_filter, StringComparison.OrdinalIgnoreCase);
  }
}
